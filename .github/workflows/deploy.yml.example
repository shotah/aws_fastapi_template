name: Deploy to AWS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --dev

      - name: Run linters
        run: |
          pipenv run pre-commit run --all-files

      - name: Run tests
        run: |
          pipenv run pytest --cov=. --cov-report=xml

      # Optional: Upload coverage to Codecov
      # Uncomment if you have a Codecov account
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     file: ./coverage.xml
      #     fail_ci_if_error: true

  deploy:
    runs-on: ubuntu-latest
    needs: test
    # Only deploy on push to main branch (not on PRs)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Set up AWS SAM
        uses: aws-actions/setup-sam@v2

      # Option 1: Using AWS credentials (simpler but less secure)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Option 2: Using OIDC (recommended - more secure)
      # Uncomment this and comment out Option 1 above if using OIDC
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
      #     role-session-name: GitHubActionsSession
      #     aws-region: ${{ secrets.AWS_REGION }}

      - name: Build SAM application
        run: sam build --use-container

      - name: Deploy SAM application
        run: |
          sam deploy \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --stack-name ${{ secrets.AWS_STACK_NAME }} \
            --capabilities CAPABILITY_IAM \
            --region ${{ secrets.AWS_REGION }}
